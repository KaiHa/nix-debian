#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

# see FEATURE AREAS in dpkg-buildflags(1)
export DEB_BUILD_MAINT_OPTIONS = hardening=+all
DPKG_EXPORT_BUILDFLAGS = 1

include /usr/share/dpkg/architecture.mk
include /usr/share/dpkg/buildflags.mk

# see ENVIRONMENT in dpkg-buildflags(1)
# package maintainers to append CFLAGS
#export DEB_CFLAGS_MAINT_APPEND  = -Wall -pedantic
# package maintainers to append LDFLAGS
#export DEB_LDFLAGS_MAINT_APPEND = -Wl,--as-needed


%:
	dh $@ --with=autoreconf


override_dh_auto_configure:
	dh_auto_configure -- \
	  --enable-gc \
	  --with-coreutils-bin=/usr/bin:/bin \
	  --localstatedir=/nix/var \
	  --libdir=/usr/lib/nix


override_dh_auto_install:
	dh_auto_install
	# remove deprecated upstart configuration
	rm -r debian/nix/etc/init/
	# install pkgconfig configuration
	mkdir -p debian/nix/usr/lib/$(DEB_HOST_MULTIARCH)/pkgconfig
	mv debian/nix/usr/lib/pkgconfig/nix-expr.pc  debian/nix/usr/lib/$(DEB_HOST_MULTIARCH)/pkgconfig/nix-expr.pc
	mv debian/nix/usr/lib/pkgconfig/nix-main.pc  debian/nix/usr/lib/$(DEB_HOST_MULTIARCH)/pkgconfig/nix-main.pc
	mv debian/nix/usr/lib/pkgconfig/nix-store.pc debian/nix/usr/lib/$(DEB_HOST_MULTIARCH)/pkgconfig/nix-store.pc
	# since this is a multi-user nix installation we remove the
	# default nix.sh and replace it by nix-daemon.sh
	rm debian/nix/etc/profile.d/nix.sh
	mv debian/nix/etc/profile.d/nix-daemon.sh debian/nix/etc/profile.d/nix.sh


override_dh_installinit:
	dh_installinit -pnix --name=nix-daemon
	# fix package-contains-ancient-file lintian warning
	touch --reference=debian/nix/lib/systemd/system/nix-daemon.service debian/nix/etc/init.d/nix-daemon


override_dh_auto_clean:
	dh_auto_clean
	# remove output files created from ./configure templates
	find . -name '*.in' | while read x; do if [ -f $${x%.in} ]; then rm -f $${x%.in}; fi; done
